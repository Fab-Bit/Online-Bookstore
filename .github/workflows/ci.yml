name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  docker-test:
    runs-on: ubuntu-latest
    env:
      BASE_URL: https://fakerestapi.azurewebsites.net
    steps:
      - uses: actions/checkout@v3
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true  # This loads the image into the local Docker daemon
          tags: online-bookstore-api-tests:latest
      - name: Run tests in container
        run: docker run --rm -e BASE_URL=$BASE_URL online-bookstore-api-tests:latest
      - name: Run tests in container and copy reports
        if: always()
        run: |
          # Run container without --rm so we can copy files afterwards
          container_id=$(docker run -d -e BASE_URL=$BASE_URL online-bookstore-api-tests:latest)
          
          # Wait for container to finish
          docker wait $container_id || true
          
          # Copy the reports (create directory first)
          mkdir -p docker-reports
          docker cp $container_id:/app/target/surefire-reports/. ./docker-reports/ 2>/dev/null || echo "No reports to copy"
          
          # Clean up the container
          docker rm $container_id || true
      - name: Publish Docker Test Summary
        uses: test-summary/action@v2
        if: always()
        with:
          paths: "docker-reports/TEST-*.xml"
          show: "all"
      - name: Upload docker test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-surefire-reports
          path: docker-reports

  test-summary:
    runs-on: ubuntu-latest
    needs: [docker-test]
    if: always()
    steps:
      - name: Generate Overall Test Summary
        run: |
          echo "# 🧪 Docker Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check Docker job result
          DOCKER_STATUS="${{ needs.docker-test.result }}"
          if [ "$DOCKER_STATUS" = "success" ]; then
            echo "## 🎉 Overall Result: SUCCESS" >> $GITHUB_STEP_SUMMARY
            echo "✅ All tests passed in the Docker containerized environment!" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ⚠️ Overall Result: ATTENTION NEEDED" >> $GITHUB_STEP_SUMMARY
            echo "❌ Some tests failed or had issues in the Docker environment." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Status:** $DOCKER_STATUS" >> $GITHUB_STEP_SUMMARY
          fi